// Generated by CoffeeScript 2.3.1
(function() {
  var camera, init, mesh, onResize, renderer, rollControls, scene;

  console.log("demo9.23 Roll controls");

  camera = null;

  scene = null;

  renderer = null;

  mesh = null;

  rollControls = null;

  init = function() {
    var ambientLight, clock, controls, gui, initStats, load, loader, renderScene, setCamControls, setRandomColors, spotLight, stats, step, texture, webGLRenderer;
    // 场景
    scene = new THREE.Scene();
    clock = new THREE.Clock();
    
    // 摄像机
    camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);
    camera.position.x = 100;
    camera.position.y = 100;
    camera.position.z = 300;
    camera.lookAt(new THREE.Vector3(0, 0, 0));
    // 渲染器
    webGLRenderer = new THREE.WebGLRenderer();
    webGLRenderer.setClearColor(new THREE.Color(0x000, 1.0));
    webGLRenderer.setSize(window.innerWidth, window.innerHeight);
    webGLRenderer.shadowMapEnabled = true;
    renderer = webGLRenderer;
    // 灯光
    ambientLight = new THREE.AmbientLight(0x383838);
    scene.add(ambientLight);
    spotLight = new THREE.SpotLight(0xffffff);
    spotLight.position.set(300, 300, 300);
    spotLight.intensity = 1;
    scene.add(spotLight);
    setCamControls = function() {};
    setRandomColors = function(object, scale) {
      var children;
      children = object.children;
      if (children && children.length > 0) {
        return children.forEach(function(e) {
          return setRandomColors(e, scale);
        });
      } else {
        if (object instanceof THREE.Mesh) {
          object.material.color = new THREE.Color(scale(Math.random()).hex());
          if (object.material.name.indexOf("building") === 0) {
            object.material.emissive = new THREE.Color(0x444444);
            object.material.transparent = true;
            return object.material.opacity = 0.8;
          }
        }
      }
    };
    // 控制台
    controls = new function() {};
    // UI
    gui = new dat.GUI();
    loader = new THREE.OBJMTLLoader();
    load = function(object) {
      var scale;
      scale = chroma.scale(["#aaffaa", "#ffff00", "#ffffff"]);
      setRandomColors(object, scale);
      mesh = object;
      scene.add(mesh);
      rollControls = new THREE.RollControls(camera);
      rollControls.movementSpeed = 25;
      return rollControls.lookSpeed = 3;
    };
    texture = THREE.ImageUtils.loadTexture("/static/pictures/assets/textures/Metro01.JPG");
    loader.load("/static/pictures/assets/models/city.obj", "/static/pictures/assets/models/city.mtl", load);
    // 执行
    step = 0;
    // 实时渲染
    renderScene = function() {
      var delta;
      stats.update();
      delta = clock.getDelta();
      if (rollControls) {
        rollControls.update(delta);
      }
      webGLRenderer.clear();
      requestAnimationFrame(renderScene);
      return renderer.render(scene, camera);
    };
    
    // 状态条
    initStats = function() {
      var stats;
      stats = new Stats();
      stats.setMode(0);
      stats.domElement.style.position = "absolute";
      stats.domElement.style.left = "0px";
      stats.domElement.style.top = "0px";
      $("#Stats-output").append(stats.domElement);
      return stats;
    };
    stats = initStats();
    $("#WebGL-output").append(renderer.domElement);
    return renderScene();
  };

  //屏幕适配
  onResize = function() {
    console.log("onResize");
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    return renderer.setSize(window.innerWidth, window.innerHeight);
  };

  window.onload = init();

  window.addEventListener("resize", onResize, false);

}).call(this);
