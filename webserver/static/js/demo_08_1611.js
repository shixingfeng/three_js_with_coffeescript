// Generated by CoffeeScript 2.3.1
(function() {
  var camera, init, mesh, onResize, renderer, scene;

  console.log("demo_8.161  Load OBJ model");

  camera = null;

  scene = null;

  renderer = null;

  mesh = null;

  init = function() {
    var add_uri, controls, gui, initStats, loader, renderScene, spotLight, stats, step, webGLRenderer;
    // 场景
    scene = new THREE.Scene();
    
    // 摄像机
    camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);
    camera.position.x = 130;
    camera.position.y = 40;
    camera.position.z = 50;
    camera.lookAt(scene.position);
    scene.add(camera);
    
    // 渲染器
    webGLRenderer = new THREE.WebGLRenderer();
    webGLRenderer.setClearColor(new THREE.Color(0xaaaaff, 1.0));
    webGLRenderer.setSize(window.innerWidth, window.innerHeight);
    webGLRenderer.shadowMapEnabled = true;
    renderer = webGLRenderer;
    //灯光
    spotLight = new THREE.SpotLight(0xffffff);
    spotLight.position.set(30, 40, 50);
    spotLight.intensity = 1;
    scene.add(spotLight);
    // 控制条
    controls = new function() {};
    
    // UI呈现
    gui = new dat.GUI();
    loader = new THREE.OBJLoader();
    add_uri = "/static/pictures/assets/models/";
    loader.load(add_uri + "pinecone1.obj", function(loadedMesh) {
      var material;
      // material = new THREE.MeshLambertMaterial {color: 0x5C3A21}
      material = new THREE.MeshLambertMaterial({
        color: 0x4e0f0a
      });
      loadedMesh.children.forEach(function(child) {
        child.material = material;
        child.geometry.computeFaceNormals();
        return child.geometry.computeVertexNormals();
      });
      mesh = loadedMesh;
      loadedMesh.scale.set(100, 100, 100);
      loadedMesh.rotation.x = -0.3;
      return scene.add(loadedMesh);
    });
    step = 0;
    // 实时渲染
    renderScene = function() {
      stats.update();
      if (mesh) {
        mesh.rotation.y += 0.006;
        mesh.rotation.x += 0.006;
      }
      requestAnimationFrame(renderScene);
      return renderer.render(scene, camera);
    };
    
    // 状态条
    initStats = function() {
      var stats;
      stats = new Stats();
      stats.setMode(0);
      stats.domElement.style.position = "absolute";
      stats.domElement.style.left = "0px";
      stats.domElement.style.top = "0px";
      $("#Stats-output").append(stats.domElement);
      return stats;
    };
    stats = initStats();
    $("#WebGL-output").append(renderer.domElement);
    return renderScene();
  };

  //屏幕适配
  onResize = function() {
    console.log("onResize");
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    return renderer.setSize(window.innerWidth, window.innerHeight);
  };

  window.onload = init();

  window.addEventListener("resize", onResize, false);

}).call(this);
