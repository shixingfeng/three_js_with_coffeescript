// Generated by CoffeeScript 2.3.1
(function() {
  var camera, init, mesh, meshAnim, onResize, renderer, scene, step;

  console.log("demo9.42 Animation from collada");

  camera = null;

  scene = null;

  renderer = null;

  mesh = null;

  step = 0;

  meshAnim = null;

  init = function() {
    var clock, controls, gui, initStats, loader, renderScene, spotLight, stats, webGLRenderer;
    // 场景
    scene = new THREE.Scene();
    
    // 摄像机
    camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);
    camera.position.x = 400;
    camera.position.y = 50;
    camera.position.z = 150;
    camera.lookAt(new THREE.Vector3(0, 0, 0));
    // 渲染器
    webGLRenderer = new THREE.WebGLRenderer();
    webGLRenderer.setClearColor(new THREE.Color(0xEEEEEE, 1.0));
    webGLRenderer.setSize(window.innerWidth, window.innerHeight);
    webGLRenderer.shadowMapEnabled = true;
    renderer = webGLRenderer;
    // 灯光
    spotLight = new THREE.SpotLight(0xffffff);
    spotLight.position.set(300, 500, 100);
    spotLight.intensity = 3;
    scene.add(spotLight);
    // 载入纹理
    clock = new THREE.Clock();
    loader = new THREE.ColladaLoader();
    loader.load("/static/pictures/assets/models/monster.dae", function(collada) {
      var animation, child;
      child = collada.skins[0];
      scene.add(child);
      animation = new THREE.Animation(child, child.geometry.animation);
      animation.play();
      child.scale.set(0.15, 0.15, 0.15);
      child.rotation.x = -0.5 * Math.PI;
      child.position.x = -100;
      return child.position.y = -60;
    });
    console.log("===");
    console.log(loader);
    console.log("===");
    // 控制台
    controls = new function() {};
    
    // UI
    gui = new dat.GUI();
    // 实时渲染
    renderScene = function() {
      var delta;
      stats.update();
      delta = clock.getDelta();
      THREE.AnimationHandler.update(delta);
      requestAnimationFrame(renderScene);
      return renderer.render(scene, camera);
    };
    
    // 状态条
    initStats = function() {
      var stats;
      stats = new Stats();
      stats.setMode(0);
      stats.domElement.style.position = "absolute";
      stats.domElement.style.left = "0px";
      stats.domElement.style.top = "0px";
      $("#Stats-output").append(stats.domElement);
      return stats;
    };
    stats = initStats();
    $("#WebGL-output").append(renderer.domElement);
    return renderScene();
  };

  //屏幕适配
  onResize = function() {
    console.log("onResize");
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    return renderer.setSize(window.innerWidth, window.innerHeight);
  };

  window.onload = init();

  window.addEventListener("resize", onResize, false);

}).call(this);
